/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package ems;

/**
 *
 * @author cristophechen
 */

import java.util.*;
import java.io.*;
import javax.swing.table.DefaultTableModel;

public class Menu extends javax.swing.JFrame {
    
    public HashTable ht;    

    /**
     * Creates new form Menu
     */
    public Menu() {
        initComponents();
        ht = new HashTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jLabel1 = new javax.swing.JLabel();
        employeeNumber = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        addButton1 = new javax.swing.JButton();
        removeButton = new javax.swing.JButton();
        saveButton = new javax.swing.JButton();
        loadButton = new javax.swing.JButton();
        employeeTable = new javax.swing.JScrollPane();
        employeeList = new javax.swing.JTable();
        refreshButton = new javax.swing.JButton();
        errorMessage = new javax.swing.JLabel();
        renumberButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("American Typewriter", 0, 34)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Employee Management System");
        jLabel1.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 3, true));
        jLabel1.setMaximumSize(new java.awt.Dimension(196, 18));

        employeeNumber.setFont(new java.awt.Font("Helvetica Neue", 0, 20)); // NOI18N
        employeeNumber.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        employeeNumber.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        employeeNumber.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                employeeNumberActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("American Typewriter", 0, 20)); // NOI18N
        jLabel2.setText("Employee Number:");

        addButton1.setBackground(new java.awt.Color(102, 255, 51));
        addButton1.setFont(new java.awt.Font("American Typewriter", 0, 32)); // NOI18N
        addButton1.setForeground(new java.awt.Color(255, 255, 255));
        addButton1.setText("Add");
        addButton1.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));
        addButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addButton1ActionPerformed(evt);
            }
        });

        removeButton.setBackground(new java.awt.Color(255, 51, 51));
        removeButton.setFont(new java.awt.Font("American Typewriter", 0, 20)); // NOI18N
        removeButton.setForeground(new java.awt.Color(255, 255, 255));
        removeButton.setText("Remove");
        removeButton.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));
        removeButton.setPreferredSize(new java.awt.Dimension(76, 37));
        removeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeButtonActionPerformed(evt);
            }
        });

        saveButton.setBackground(new java.awt.Color(51, 102, 255));
        saveButton.setFont(new java.awt.Font("American Typewriter", 0, 24)); // NOI18N
        saveButton.setForeground(new java.awt.Color(255, 255, 255));
        saveButton.setText("Save");
        saveButton.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));
        saveButton.setMaximumSize(new java.awt.Dimension(56, 31));
        saveButton.setMinimumSize(new java.awt.Dimension(56, 31));
        saveButton.setPreferredSize(new java.awt.Dimension(84, 37));
        saveButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveButtonActionPerformed(evt);
            }
        });

        loadButton.setBackground(new java.awt.Color(255, 0, 255));
        loadButton.setFont(new java.awt.Font("American Typewriter", 0, 24)); // NOI18N
        loadButton.setForeground(new java.awt.Color(255, 255, 255));
        loadButton.setText("Load");
        loadButton.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));
        loadButton.setMaximumSize(new java.awt.Dimension(56, 37));
        loadButton.setMinimumSize(new java.awt.Dimension(56, 37));
        loadButton.setPreferredSize(new java.awt.Dimension(56, 37));
        loadButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loadButtonActionPerformed(evt);
            }
        });

        employeeList.setFont(new java.awt.Font("American Typewriter", 0, 13)); // NOI18N
        employeeList.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Employee #", "Type", "First Name", "Last Name", "Gender", "Location", "Deduction %", "Yearly Salary", "Hourly Wage", "Weekly Hours", "Yearly Weeks", "Net Income"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Double.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, true, true, true, true, true, true, true, true, true, true, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        employeeTable.setViewportView(employeeList);
        if (employeeList.getColumnModel().getColumnCount() > 0) {
            employeeList.getColumnModel().getColumn(0).setPreferredWidth(65);
            employeeList.getColumnModel().getColumn(1).setPreferredWidth(25);
            employeeList.getColumnModel().getColumn(2).setPreferredWidth(80);
            employeeList.getColumnModel().getColumn(3).setPreferredWidth(80);
            employeeList.getColumnModel().getColumn(4).setPreferredWidth(40);
            employeeList.getColumnModel().getColumn(5).setPreferredWidth(70);
            employeeList.getColumnModel().getColumn(6).setPreferredWidth(70);
            employeeList.getColumnModel().getColumn(7).setPreferredWidth(90);
            employeeList.getColumnModel().getColumn(11).setPreferredWidth(100);
        }

        refreshButton.setBackground(new java.awt.Color(255, 153, 0));
        refreshButton.setFont(new java.awt.Font("Helvetica Neue", 0, 32)); // NOI18N
        refreshButton.setForeground(new java.awt.Color(255, 255, 255));
        refreshButton.setText("Refresh");
        refreshButton.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));
        refreshButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refreshButtonActionPerformed(evt);
            }
        });

        errorMessage.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        renumberButton.setBackground(new java.awt.Color(0, 0, 0));
        renumberButton.setFont(new java.awt.Font("American Typewriter", 0, 18)); // NOI18N
        renumberButton.setForeground(new java.awt.Color(255, 255, 255));
        renumberButton.setText("Renumber");
        renumberButton.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));
        renumberButton.setPreferredSize(new java.awt.Dimension(76, 37));
        renumberButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                renumberButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(146, 146, 146)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 552, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(employeeNumber)
                                        .addGap(18, 18, 18)
                                        .addComponent(addButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(136, 136, 136))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(6, 6, 6)
                                        .addComponent(errorMessage, javax.swing.GroupLayout.PREFERRED_SIZE, 238, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(42, 42, 42)
                        .addComponent(renumberButton, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(saveButton, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(loadButton, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(removeButton, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(427, 427, 427)
                        .addComponent(refreshButton, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(28, 28, 28)
                        .addComponent(employeeTable, javax.swing.GroupLayout.PREFERRED_SIZE, 1049, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(28, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(removeButton, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(saveButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(28, 28, 28)
                        .addComponent(loadButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(37, 37, 37)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(employeeNumber, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(addButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(errorMessage)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(renumberButton, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(29, 29, 29)
                .addComponent(employeeTable, javax.swing.GroupLayout.PREFERRED_SIZE, 262, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26)
                .addComponent(refreshButton, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(26, Short.MAX_VALUE))
        );

        jLabel1.getAccessibleContext().setAccessibleDescription("");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void employeeNumberActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_employeeNumberActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_employeeNumberActionPerformed

    private void addButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addButton1ActionPerformed
        // TODO add your handling code here:
        try{
            int index = ht.findIndex(Integer.parseInt(employeeNumber.getText()));
            
            for(int i = 0; i < ht.employees[index].size(); ++i){
                if(ht.employees[index].get(i).empNum == Integer.parseInt(employeeNumber.getText())){
                    errorMessage.setText("Employee number already exists.");
                    return;
                }
            }
            addEmployee AddEmployee = new addEmployee(ht, Integer.parseInt(employeeNumber.getText()));
            AddEmployee.setVisible(true); 
            errorMessage.setText("");
        }
        
        catch(Exception e){
            errorMessage.setText("Please enter a number.");
        }
        
        employeeNumber.setText("");

    }//GEN-LAST:event_addButton1ActionPerformed

    private void removeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeButtonActionPerformed
        // TODO add your handling code here:
        removeEmployee RemoveEmployee = new removeEmployee(ht);
        RemoveEmployee.setVisible(true);
        errorMessage.setText("");
    }//GEN-LAST:event_removeButtonActionPerformed

    private void saveButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveButtonActionPerformed
        // TODO add your handling code here:
        
        try{
            saveEmployees SaveEmployees;
            File employeeData = new File("EmployeeInformation.txt");
            if(employeeData.createNewFile()){
                SaveEmployees = new saveEmployees("New file \"EmployeeInformation.txt\" has been created.");
            }
            else SaveEmployees = new saveEmployees("Existing file \"EmployeeInformation.txt\" has been updated.");
            SaveEmployees.setVisible(true);
            
            FileWriter fw = new FileWriter("EmployeeInformation.txt");
            
            DefaultTableModel table = (DefaultTableModel) employeeList.getModel();
         
            for(int i = 0; i < table.getRowCount(); ++i){
                String empNum = String.valueOf(employeeList.getModel().getValueAt(i, 0));
                String employeeType = String.valueOf(employeeList.getModel().getValueAt(i, 1));
                String firstName = String.valueOf(employeeList.getModel().getValueAt(i, 2));
                String lastName = String.valueOf(employeeList.getModel().getValueAt(i, 3));
                String gender = String.valueOf(employeeList.getModel().getValueAt(i, 4));
                String location = String.valueOf(employeeList.getModel().getValueAt(i, 5));
                String deduction = String.valueOf(employeeList.getModel().getValueAt(i, 6));
                String salary = String.valueOf(employeeList.getModel().getValueAt(i, 7));
                String wage = String.valueOf(employeeList.getModel().getValueAt(i, 8));
                String weekly = String.valueOf(employeeList.getModel().getValueAt(i, 9));
                String yearly = String.valueOf(employeeList.getModel().getValueAt(i, 10));
                String income = String.valueOf(employeeList.getModel().getValueAt(i, 11));
                
                fw.write(empNum + "," + employeeType + "," + firstName + "," + lastName + "," + gender + "," + location +
                        "," + deduction + "," + salary + "," + wage + "," + weekly + "," + yearly + "," + income + "\n");
            }
            
            /*for(ArrayList<EmployeeInfo> i : ht.employees){
                for(int j = 0; j < i.size(); ++j){
                    String line = "";
                    if(i.get(j) instanceof FTE FTEemployee){
                        line = FTEemployee.empNum + ",FTE," + FTEemployee.firstName + "," + FTEemployee.lastName + ","
                                + FTEemployee.gender + "," + FTEemployee.workLoc + "," + FTEemployee.deductRate + "," + FTEemployee.yearlySalary;
                    }
                    else if(i.get(j) instanceof PTE PTEemployee){
                        line = PTEemployee.empNum + ",PTE," + PTEemployee.firstName + "," + PTEemployee.lastName + "," + 
                                PTEemployee.gender + "," + PTEemployee.workLoc + "," + PTEemployee.deductRate + "," + PTEemployee.hourlyWage + 
                                "," + PTEemployee.weeklyHours + "," + PTEemployee.yearlyWeeks;
                    }
                    
                    fw.write(line + System.lineSeparator());
                    fw.close();
                }
            }*/
            
            fw.close();
        }
        catch(IOException e){
            saveEmployees SaveEmployees = new saveEmployees("An error has occured.");
            SaveEmployees.setVisible(true);
            e.printStackTrace();
        }
    }//GEN-LAST:event_saveButtonActionPerformed

    private void loadButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loadButtonActionPerformed
        // TODO add your handling code here:
        
        try{
            loadEmployees LoadEmployees = new loadEmployees("Data successfully loaded from \"EmployeeInformation.txt\".");
            LoadEmployees.setVisible(true);
            File employeeData = new File("EmployeeInformation.txt");
            Scanner sc = new Scanner(employeeData);
            
            while(sc.hasNextLine()){
                String data = sc.nextLine();
                String employee[] = data.split(",");
                
                if(employee[1].equals("FTE")){
                    String salary = employee[7].substring(1);
                    FTE savedFTE = new FTE(Integer.parseInt(employee[0]), employee[2], employee[3], employee[4], employee[5],
                    Double.parseDouble(employee[6]), Double.parseDouble(salary));
                    
                    ht.addEmployee(savedFTE);
                }
                
                else if(employee[1].equals("PTE")){
                    String wage = employee[8].substring(1);
                    PTE savedPTE = new PTE(Integer.parseInt(employee[0]), employee[2], employee[3], employee[4], employee[5], 
                    Double.parseDouble(employee[6]), Double.parseDouble(wage), Double.parseDouble(employee[9]),
                    Double.parseDouble(employee[10]));
                    
                    ht.addEmployee(savedPTE);
                }
            }
        }
        catch(FileNotFoundException e){
            loadEmployees LoadEmployees = new loadEmployees("No file currently exists.");
            LoadEmployees.setVisible(true);
            e.printStackTrace();
        }
        
        errorMessage.setText("");
    }//GEN-LAST:event_loadButtonActionPerformed

    private void refreshButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshButtonActionPerformed
        // TODO add your handling code here:
        DefaultTableModel table = (DefaultTableModel) employeeList.getModel();
         
        if(table.getRowCount() > 0){

            for(int i = 0; i < table.getRowCount(); ++i){
                
                int empNum = (int) employeeList.getModel().getValueAt(i, 0);
                String employeeType = String.valueOf(employeeList.getModel().getValueAt(i, 1));
                String firstName = String.valueOf(employeeList.getModel().getValueAt(i, 2));
                String lastName = String.valueOf(employeeList.getModel().getValueAt(i, 3));
                String gender = String.valueOf(employeeList.getModel().getValueAt(i, 4));
                String location = String.valueOf(employeeList.getModel().getValueAt(i, 5));
                double deduction = (double) employeeList.getModel().getValueAt(i, 6);

                if(employeeType.equals("FTE")){
                    String salary = String.valueOf(employeeList.getModel().getValueAt(i, 7));
                    salary = salary.substring(1);

                    EmployeeInfo tempEmployee = new FTE(empNum, firstName, lastName, gender, location, deduction, Double.parseDouble(salary));

                    int index = ht.findIndex(tempEmployee.empNum);
                    for(int j = 0; j < ht.employees[index].size(); ++j){
                        if(ht.employees[index].get(j).empNum == tempEmployee.empNum)ht.employees[index].set(j, tempEmployee);
                    }
                }

                else if(employeeType.equals("PTE")){
                    String wage = String.valueOf(employeeList.getModel().getValueAt(i, 8));
                    String weekly = String.valueOf(employeeList.getModel().getValueAt(i, 9));
                    String yearly = String.valueOf(employeeList.getModel().getValueAt(i, 10));
                    wage = wage.substring(1);

                    EmployeeInfo tempEmployee = new PTE(empNum, firstName, lastName, gender, location, deduction, Double.parseDouble(wage), Double.parseDouble(weekly), Double.parseDouble(yearly));
                    int index = ht.findIndex(tempEmployee.empNum);
                    for(int j = 0; j < ht.employees[index].size(); ++j){
                        if(ht.employees[index].get(j).empNum == tempEmployee.empNum)ht.employees[index].set(j, tempEmployee);
                    }
                }
            }
        }
        
        table.setRowCount(0);
        
        for(ArrayList<EmployeeInfo> index: ht.employees){
            for(int i = 0; i < index.size(); ++i){
                EmployeeInfo employee = index.get(i);
                
                if(employee instanceof FTE FTEemployee){
                    //System.out.println(FTEemployee.empNum + " " + FTEemployee.firstName + " " + FTEemployee.gender + " " + 
                     //FTEemployee.workLoc + " " + FTEemployee.deductRate + " " + FTEemployee.yearlySalary);
                    table.addRow(new Object[]{FTEemployee.empNum, "FTE", FTEemployee.firstName, FTEemployee.lastName, FTEemployee.gender, 
                    FTEemployee.workLoc, FTEemployee.deductRate, "$" + FTEemployee.yearlySalary, "n/a", "n/a", "n/a", "$" + FTEemployee.getIncome()});
                }
                else if(employee instanceof PTE PTEemployee){
                    table.addRow(new Object[]{PTEemployee.empNum, "PTE", PTEemployee.firstName, PTEemployee.lastName, PTEemployee.gender,
                    PTEemployee.workLoc, PTEemployee.deductRate, "n/a", "$" + PTEemployee.hourlyWage, PTEemployee.weeklyHours, PTEemployee.yearlyWeeks, "$" + PTEemployee.getIncome()});
                }
            }
        }
    }//GEN-LAST:event_refreshButtonActionPerformed

    private void renumberButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_renumberButtonActionPerformed
        // TODO add your handling code here:
        
        errorMessage.setText("");
        changeEmployeeNumber ChangeEmployeeNumber = new changeEmployeeNumber(ht);
        ChangeEmployeeNumber.setVisible(true);
    }//GEN-LAST:event_renumberButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Menu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Menu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Menu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Menu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Menu().setVisible(true);
            }
        });   
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addButton1;
    private javax.swing.JTable employeeList;
    private javax.swing.JTextField employeeNumber;
    private javax.swing.JScrollPane employeeTable;
    private javax.swing.JLabel errorMessage;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JButton loadButton;
    private javax.swing.JButton refreshButton;
    private javax.swing.JButton removeButton;
    private javax.swing.JButton renumberButton;
    private javax.swing.JButton saveButton;
    // End of variables declaration//GEN-END:variables
}
